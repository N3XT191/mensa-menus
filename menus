#!/usr/bin/env python3

import urllib.request, json 
from xml.etree.ElementTree import parse, fromstring
import sys
import datetime
class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

def usage():
    print('usage: "menus ' + bcolors.BOLD + 'location' + bcolors.ENDC + ' [--all]"')
    print("with possible locations:")
    print("\t zentrum")
    print("\t hoengg")
    print("\t poly")
    print("\t uzh")
    print("")
    print('add "--all" to ignore blocked menus')
    sys.exit()

eth_mensas = {'zentrum' : [ 12, 13, 28, 11], 'hoengg' : [15, 18, 20, 21]}

today = datetime.date.today().strftime("%Y-%m-%d")
hour = datetime.datetime.now().hour
weekday = datetime.date.today().weekday()

if(hour >= 21):
    today = (datetime.date.today() + datetime.timedelta(days=1) ).strftime("%Y-%m-%d")
    weekday += 1

weekday += 1



if(hour >=14 and hour <=20):
    meal_time = 'dinner'
    uzh_id = '149'
else:
    meal_time = 'lunch'
    uzh_id = '148'

eth_url = 'https://www.webservices.ethz.ch/gastro/v1/RVRI/Q1E1/meals/de/'+today+'/' + meal_time
uzh_url = 'http://zfv.ch/de/menus/rssMenuPlan?menuId=' + uzh_id + '&dayOfWeek=' + str(weekday)

blocked_menus = ['Insalata', 'Garden', 'GARDEN', 'natÃ¼rlich vegi', 'GARDEN ABEND', 'food market vegi']

if len(sys.argv) != 2 and len(sys.argv) != 3:
    usage()

def print_uzh_menus():
    with urllib.request.urlopen(uzh_url) as url:
        string = url.read().decode()
        string= string.replace('<br />', '') # fix malformed tags
        document= fromstring(string) # parse the string

        i = 0
        mensa_name = 'UZH Mensa'
        if(meal_time == 'dinner'):
            mensa_name += ' Dinner'
        print(bcolors.OKGREEN, bcolors.BOLD, mensa_name, bcolors.ENDC)
        for child in document[4][3][0]:
            if(i%2 == 0):
                title = child.text
                price = child[0].text

                cleanTitle = " ".join(title.split())
                cleanPrice = " ".join(price.split())[2:10]
                print(bcolors.OKBLUE, bcolors.BOLD, cleanTitle, cleanPrice, bcolors.ENDC)
            else:
                description = child.text
                cleanDescription = " ".join(description.split())
                print("    ",cleanDescription)
            i += 1
    print()

if(sys.argv[1] == 'zentrum' or sys.argv[1] == 'hoengg'):
    if(sys.argv[1] == 'zentrum'):
        print_uzh_menus()
    with urllib.request.urlopen(eth_url) as url:
        data = json.loads(url.read().decode())
        #polymensa = list(filter(lambda menu: menu['id'] == 12, data))[0]
    
        for id in eth_mensas[sys.argv[1]]:
            potential_mensa = list(filter(lambda menu: menu['id'] == id, data))

            if potential_mensa:
                mensa = potential_mensa[0]
                menus = mensa['meals']

                print(bcolors.OKGREEN, bcolors.BOLD, mensa['mensa'], bcolors.ENDC)
                for menu in menus:
                    if menu['label'] not in blocked_menus:
                        print(bcolors.OKBLUE, bcolors.BOLD, menu['label'] + " | CHF " + menu['prices']['student'], bcolors.ENDC)
                        
                        description = " ".join(menu['description'])
                        # remove multiple spaces
                        description = " ".join(description.split())
                        print("    ",description)
                print()
elif(sys.argv[1] == 'poly'):
    with urllib.request.urlopen(eth_url) as url:
        data = json.loads(url.read().decode())
        mensa = list(filter(lambda menu: menu['id'] == 12, data))[0]
        menus = mensa['meals']
        print(bcolors.OKGREEN, bcolors.BOLD, mensa['mensa'], bcolors.ENDC)
        for menu in menus:
            if menu['label'] not in blocked_menus or (len(sys.argv) == 3 and sys.argv[2] == "--all"):
                print(bcolors.OKBLUE, bcolors.BOLD, menu['label'] + " | CHF " + menu['prices']['student'], bcolors.ENDC)
                
                description = " ".join(menu['description'])
                # remove multiple spaces
                description = " ".join(description.split())
                print("    ", description)
elif(sys.argv[1] == 'uzh'):
    print_uzh_menus()
else:
    usage()
